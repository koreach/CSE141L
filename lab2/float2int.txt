mov r0, #0x00
mov r1, #0x00
and r2, r1, #0x80
and r3, r1, #0x7c
lsr r3, r3, #2
and r0, r0, #0x3
add r4, r0, r1
cmp r4, #0
bne prepend
prepend_out:
cmp r3, #29
bge overflow
blt lower
prepend:
orr r0, r0, #0x4
b prepend_out
overflow:
cmp r1, #0x80
beq overflow_negative
mov r4, #0xff
mov r5, #0x7f
b label
overflow_negative:
mov r4, #0xff
mov r5, #0xff
b label
lower:
cmp r2, #26
bge case_1
blt lower_1
lower_1:
cmp r2, #25
beq case_2
blt lower_2
lower_2:
cmp r2, #14
bge case_3
blt case_4
case_1:
sub r3, r3, #15
lsl r1, r1, r3
lsl r0, r0, r3
b label
case_2:
mov r4, r3
b label
case_3:
sub r2, r2, #15
cmp r2, #0
ble out
and r4, r3, #0x1
lsr r3, r3, #0x1
sub r2, r2, #1
cmp r2, #0
beq out2
forloop:
and r5, r3, #0x1
lsr r3, r3, #0x1
sub r2, r2, #1
lsl r5, r5, #1
add r4, r4, r5
cmp r2, #0
beq forloopout
b forloop
forloopout:
and r5, r4, #0x1
and r6, r3, #0x1
cmp r5, r6
beq out3
and r5, r3, #0x1
cmp r5, #0x0
beq out4
b label
case_4:
cmp r1, #0x8000
beq overflow_negative_2
mov r4, #0x0000
b label
overflow_negative_2:
mov r4, #0x8000
b label
copy_mantissa:
mov r4, r3
b label
out:
mov r4, r3
b label
out2:
and r4, r3, #0x1
add r5, r5, r4
cmp r5, #0x2
beq out3
out3:
add r4, r3, #1
b label
out4:
and r5, r4, #0x1
cmp r5, #1
beq out5
b label
out5:
and r5, r4, #0xfffe
cmp r5, #0
bne out3
b label
label end
